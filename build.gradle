// NOTE: The only changes that belong in this file are the definitions
// of tool versions (gradle plugin, compile SDK, build tools), so that
// Volley can be built via gradle as a standalone project.
//
// Any other changes to the build config belong in rules.gradle, which
// is used by projects that depend on Volley but define their own
// tools versions across all dependencies to ensure a consistent build.
//
// Most users should just add this line to settings.gradle:
//     include(":volley")
//
// If you have a more complicated Gradle setup you can choose to use
// this instead:
//     include(":volley")
//     project(':volley').buildFileName = 'rules.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
    }
}

apply plugin: 'com.android.library'
import org.apache.tools.ant.filters.*

// Custom properties for shadowing the library
ext.tmp = "build/shadow"
ext.buildTmp = tmp + "/src"
ext.oldpkg = "com.android.volley"
ext.newpkg = "com.mopub.volley"

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    sourceSets {
        defaultConfig {
            testApplicationId 'com.mopub.volley.tests'
        }

        main {
            assets.srcDirs = ['assets']
            res.srcDirs = ['res']
            aidl.srcDirs = ['src']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            // Compile java from the shadowed source location instead of the default.
            java.srcDirs         = [buildTmp]
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
}

apply from: 'rules.gradle'
apply from: 'bintray.gradle'

// This task copies all source files to a temporary directory and renames
// all instances of the old package with the shadowed package name.
task renamePackages << {
    ext.replaceFilter = new TokenFilter.ReplaceString()
    replaceFilter.setFrom(oldpkg)
    replaceFilter.setTo(newpkg)
    copy {
        from('src')
        into(buildTmp)
        filter(TokenFilter, addReplaceString: replaceFilter)
    }
}

// Add a dependency to the javaCompile task on the shadowed source
// so that we can be sure the shadowed source is present.
android.libraryVariants.all { variant ->
    // Make sure we copy the packages into the tmp directory
    variant.javaCompile.dependsOn renamePackages
}

// On every release variant of the library project, create a task that
// produces a JAR of the compiled java.
android.libraryVariants.all { variant ->
  def name = variant.buildType.name
  if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
    return; // Skip debug builds.
  }
  def task = project.tasks.create "jar${name.capitalize()}", Jar
  task.dependsOn variant.javaCompile
  task.from variant.javaCompile.destinationDir
  artifacts.add('archives', task);
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
